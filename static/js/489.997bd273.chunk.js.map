{"version":3,"file":"static/js/489.997bd273.chunk.js","mappings":"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","sources":["constants/constants.js","constants/credentials.js","assets/img/brand/sygnet.svg","views/Settings/ChangePassword.js","containers/DefaultLayout/DefaultHeader.js"],"sourcesContent":["\nclass Url {\n    //static BASE_URL = \"http://localhost:1110/api/\";\n\n    static BASE_URL = \"https://insightbackendservice.azurewebsites.net/api/\"\n\n    //static BASE_URL = \"https://services.data-intell.co.uk/api/\";\n}\n\nclass Server_connection {\n\n    static ADMIN_SIGN_UP_URL = Url.BASE_URL + \"users/create_account\";\n\n    static ADMIN_LOGIN_URL = Url.BASE_URL + \"users/login\";\n\n    static ADD_NEW_CLIENT_URL = Url.BASE_URL + \"users/client/register\";\n\n    static CLIENT_ADMIN_SIGN_UP_URL = Url.BASE_URL + \"users/client/create_account\";\n\n    static CLIENT_ADMIN_LOGIN_URL = Url.BASE_URL + \"users/clientAdmin/login\";\n\n    static GET_ALL_CLIENTS_URL = Url.BASE_URL + \"users/clients\";\n\n    static GET_ALL_APP_CLIENTS_URL = Url.BASE_URL + \"users/clients_only\";\n\n    static DELETE_CLIENT_INFO_URL = Url.BASE_URL + \"users/delete/clientInfo\";\n\n    static GET_CLIENT_REPORTS_URL = Url.BASE_URL + \"users/client/reports\";\n\n    static ADD_CLIENT_USER_URL = Url.BASE_URL + \"users/clientUser/register\";\n\n    static UPDATE_CLIENT_INFO_URL = Url.BASE_URL + \"users/update/clientInfo\";\n\n    static UPDATE_CLIENT_USER_INFO_URL = Url.BASE_URL + \"users/update/clientUsersInfo\";\n\n    static DELETE_CLIENT_USER_INFO_URL = Url.BASE_URL + \"users/clientUser/deleteInfo\";\n\n    static GET_ALL_CLIENT_USERS_URL = Url.BASE_URL + \"users/clientUsers\";\n\n    static ASSIGN_REPORTS_TO_USERS_URL = Url.BASE_URL + \"users/client_reports/assignReports\";\n\n    static GET_ALL_ASIGNED_REPORTS_URL = Url.BASE_URL + \"users/client_reports/assignments\";\n\n    static DELETE_ASSIGNMENT_INFO_URL = Url.BASE_URL + \"users/client_reports/assignments/deleteInfo\"\n\n    static ACCESS_TOKEN_URL = Url.BASE_URL + \"users/accessToken\";\n\n    static GET_ALL_INTEL_ADMINS_URL = Url.BASE_URL + \"users/intelAdmins\";\n\n    static CHANGE_PASSWORD = Url.BASE_URL + \"users/intelAdmin/change_password/\";\n\n    static FORGOT_PASSWORD_URL = Url.BASE_URL + \"users/intelAdmin/forgot_password\";\n\n    static RESET_PASSWORD_URL = Url.BASE_URL + \"users/intelAdmin/reset_password\";\n}\n\nexport default Server_connection;","import jwt_decode from 'jwt-decode';\n\nconst token = localStorage.IntellUserToken;\nconst decoded = jwt_decode(token);\n\nlet Client_id = decoded.client_id;\nlet Email = decoded.email;\nlet Id = decoded.id;\nlet Name = decoded.username;\nlet Status = decoded.user_status;\nlet Type = decoded.user_type\n\nclass UserInfo {\n\n    static UserEmail = Email;\n\n    static UserId = Id;\n\n    static UserName = Name;\n\n    static UserType = Type;\n\n    static UserStatus = Status;\n\n    static ClientId = Client_id;\n\n}\n\nexport default UserInfo;","var _polygon, _polygon2, _polygon3, _polygon4, _polygon5, _polygon6, _polygon7, _polygon8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSygnet(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Warstwa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"173.2px\",\n    height: \"200px\",\n    viewBox: \"0 0 173.2 200\",\n    enableBackground: \"new 0 0 173.2 200\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#61DAFB\",\n    points: \"0,150 0,50 86.6,0 173.2,50 173.2,150 86.6,200 \"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#FFFFFF\",\n    points: \"86.6,133.3 57.7,116.7 57.7,83.3 86.6,66.7 115.5,83.3 144.3,66.7 86.6,33.3 28.9,66.7 28.9,133.3  86.6,166.7 144.3,133.3 115.5,116.7 \"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    opacity: 0.04,\n    stroke: \"#FFFFFF\",\n    strokeMiterlimit: 10,\n    enableBackground: \"new    \",\n    points: \"0,50 86.6,100 86.6,0 \"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    opacity: 0.04,\n    stroke: \"#FFFFFF\",\n    strokeMiterlimit: 10,\n    enableBackground: \"new    \",\n    points: \"0,150 86.6,200 86.6,100 \"\n  })), _polygon5 || (_polygon5 = /*#__PURE__*/React.createElement(\"polygon\", {\n    opacity: 0.08,\n    stroke: \"#FFFFFF\",\n    strokeMiterlimit: 10,\n    enableBackground: \"new    \",\n    points: \"86.6,100 173.2,150 173.2,50  \"\n  })), _polygon6 || (_polygon6 = /*#__PURE__*/React.createElement(\"polygon\", {\n    fillOpacity: 0,\n    points: \"86.6,100 0,50 0,150 \"\n  })), _polygon7 || (_polygon7 = /*#__PURE__*/React.createElement(\"polygon\", {\n    opacity: 0.08,\n    stroke: \"#FFFFFF\",\n    strokeMiterlimit: 10,\n    enableBackground: \"new    \",\n    points: \"173.2,150 86.6,100 86.6,200  \"\n  })), _polygon8 || (_polygon8 = /*#__PURE__*/React.createElement(\"polygon\", {\n    opacity: 0.08,\n    stroke: \"#FFFFFF\",\n    strokeMiterlimit: 10,\n    enableBackground: \"new    \",\n    points: \"173.2,50 86.6,0 86.6,100 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSygnet);\nexport default __webpack_public_path__ + \"static/media/sygnet.bd2efe419cd1449128177a00c9b78063.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport {Modal, Button,} from 'react-bootstrap'\nimport {\n  Col,\n  FormGroup,\n  Input,\n  Select,\n  Label,\n  Row,\n} from 'reactstrap';\nimport jwt_decode from 'jwt-decode';\nimport Server_connection from '../../constants/constants';\n// import Spinner from '../../Loaders/Spinner'\nimport './Settings.scss'\n\nclass ChangePassword extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        id: '',\n        old_password: '',\n        new_password: '',\n        token: '',\n        email: '',\n        message: '',\n        isLoaded: false\n      }\n      this.handleUpdateItem = this.handleUpdateItem.bind(this);\n      this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount(){\n        const token = localStorage.IntellUserToken;\n    \n        const decoded = jwt_decode(token);\n        this.setState({\n            id: decoded.id,\n            email: decoded.email\n        })\n    }\n\n    onChange(e){\n      this.setState({[e.target.name]: e.target.value});\n      //console.log({[e.target.name]: e.target.value});\n    }\n\n    handleUpdateItem(e){\n      e.preventDefault();\n\n      const change_password = {   \n        old_password: this.state.old_password,\n        new_password: this.state.new_password,\n        email: this.state.email\n      };\n\n      fetch(Server_connection.CHANGE_PASSWORD + `${this.state.id}`,{\n        method: 'PUT',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify(change_password)\n      })\n      .then(res => res.json())\n      .then((result) =>{\n        this.setState({message : result.message, isLoaded : true})\n        console.log([this.state.message])\n      },\n      (error) => {\n        this.setState({message : 'Failed.. Try again!!'})\n      });\n\n      var { isLoaded } = this.state;\n\n    }\n    \n    render() {\n      var { regions, handleUpdateItem} = this.state;\n      \n        return (\n            <Modal {...this.props} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\"><h5>Change Account Password</h5></Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormGroup row className=\"my-0\">\n                        <Col xs=\"12\">\n                            <FormGroup>\n                                <Label htmlFor=\"old_password\" className=\"lable\">Current Password</Label>\n                                <Input type=\"text\" name=\"old_password\" placeholder= \"Enter New Password\" value={this.state.old_password} onChange={this.onChange}/>\n                            </FormGroup>\n                        </Col>\n                        <Col xs=\"12\">\n                            <FormGroup>\n                                <Label htmlFor=\"new_password\" className=\"lable\">New Password</Label>\n                                <Input type=\"text\" name=\"new_password\" value={this.state.new_password} onChange={this.onChange}\n                                placeholder= \"Enter New Password\">\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n                    <hr/>\n                    <h6><span className='error-msg'>{this.state.message }</span></h6>\n                </Modal.Body>\n                <Modal.Footer>\n                <div className=\"d-inline\">\n                  <Button block color=\"danger\" size=\"sm\" className=\"btn-pill bg-danger\" onClick={this.props.onHide}>Close</Button>\n                </div>\n                <div className=\"d-inline\">\n                  <Button block color=\"success\" size=\"sm\" className=\"btn-pill bg-success\" onClick={this.handleUpdateItem}>Save</Button>\n                </div>\n              </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default ChangePassword;\n","import React, { Component } from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\nimport logo from '../../assets/img/brand/di2.png'\nimport sygnet from '../../assets/img/brand/sygnet.svg'\nimport jwt_decode from 'jwt-decode';\nimport ChangePassword from '../../views/Settings/ChangePassword'\nimport './Header.scss'\nimport UserInfo from '../../constants/credentials'\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        username: '',\n        email: '',\n        token: '',\n        passwordModalShow: false\n    };\n  }\n\n  componentDidMount(){\n\n    const token = localStorage.IntellUserToken;\n\n    if(!token){\n      this.props.history.push('/login')\n    }else{\n      const decoded = jwt_decode(token);\n      this.setState({\n        username: decoded.username,\n        email: decoded.email\n      })\n    }\n  }\n\n  logOut(e){\n    e.preventDefault()\n    localStorage.removeItem('IntellUserToken')\n    this.props.history.push('/login')\n  }\n\n  render() {\n\n    let passwordModalClose = () => this.setState({passwordModalShow : false});\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n    const { username } = this.state;\n    \n    if(UserInfo.UserType == 'IntellAdmin'){\n      return (\n        <React.Fragment>\n          <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n          <AppNavbarBrand\n            full={{ src: logo, width: 150, height: 54, alt: 'G-paid Logo' }}\n            // minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\n          />\n          <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\n  \n          <Nav className=\"d-md-down-none\" navbar>\n            <NavItem className=\"px-3\">\n              <NavLink to=\"/dashboard\" className=\"nav-link\">Dashboard</NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <Link to=\"/clients\" className=\"nav-link\"><i className=\"icon-diamond\"> Clients</i></Link>\n            </NavItem>\n            <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"px-3\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-wrench\"> Settings</NavLink>\n                </NavItem>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick = {() => this.setState({passwordModalShow : true})}><i className=\"fa fa-shield\"></i> Change Password</DropdownItem>\n                <DropdownItem onClick={this.logOut.bind(this)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"d-md-down-none\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-user\"> {this.state.username}</NavLink>\n                </NavItem>\n              </DropdownToggle>\n              {/* <DropdownMenu right>\n                <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\n                <DropdownItem><i className=\"fa fa-user\"></i> Profile</DropdownItem>\n                <DropdownItem><i className=\"fa fa-wrench\"></i> Settings</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem><i className=\"fa fa-shield\"></i> Lock Account</DropdownItem>\n                <DropdownItem onClick={this.logOut.bind(this)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n              </DropdownMenu> */}\n            </UncontrolledDropdown>\n  \n          </Nav>\n          {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n          {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n          <div className='right-coner'></div>\n          <ChangePassword\n            show = {this.state.passwordModalShow}\n            onHide = {passwordModalClose}/>\n        </React.Fragment>\n      );\n    }else if(UserInfo.UserType == 'ClientAdmin'){\n      return (\n        <React.Fragment>\n          <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n          <AppNavbarBrand\n            full={{ src: logo, width: 150, height: 54, alt: 'G-paid Logo' }}\n            // minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\n          />\n          <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\n  \n          <Nav className=\"d-md-down-none\" navbar>\n            <NavItem className=\"px-3\">\n              <NavLink to=\"/dashboard\" className=\"nav-link\" >Dashboard</NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <Link to=\"/users\" className=\"nav-link\"><i className=\"icon-people\"> Users</i></Link>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <Link to=\"/assignments\" className=\"nav-link\"><i className=\"icon-note\"> Assignments</i></Link>\n            </NavItem>\n            <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"px-3\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-wrench\"> Settings</NavLink>\n                </NavItem>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick = {() => this.setState({passwordModalShow : true})}><i className=\"fa fa-shield\"></i> Change Password</DropdownItem>\n                <DropdownItem onClick={this.logOut.bind(this)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"d-md-down-none\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-home\"> {this.state.username}</NavLink>\n                </NavItem>\n              </DropdownToggle>\n              {/* <DropdownMenu right>\n                <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\n                <DropdownItem><i className=\"fa fa-user\"></i> Profile</DropdownItem>\n                <DropdownItem><i className=\"fa fa-wrench\"></i> Settings</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem><i className=\"fa fa-shield\"></i> Lock Account</DropdownItem>\n                <DropdownItem onClick={this.logOut.bind(this)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n              </DropdownMenu> */}\n            </UncontrolledDropdown>\n  \n          </Nav>\n          {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n          {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n          <div className='right-coner'></div>\n          <ChangePassword\n            show = {this.state.passwordModalShow}\n            onHide = {passwordModalClose}/>\n        </React.Fragment>\n      );\n    }\n    else if(UserInfo.UserType == 'ClientUser'){\n      return (\n        <React.Fragment>\n          <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n          <AppNavbarBrand\n            full={{ src: logo, width: 150, height: 54, alt: 'G-paid Logo' }}\n            // minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\n          />\n          <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\n  \n          <Nav className=\"d-md-down-none\" navbar>\n            <NavItem className=\"px-3\">\n              <NavLink to=\"/dashboard\" className=\"nav-link\" >Dashboard</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"px-3\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-wrench\"> Settings</NavLink>\n                </NavItem>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick = {() => this.setState({passwordModalShow : true})}><i className=\"fa fa-shield\"></i> Change Password</DropdownItem>\n                <DropdownItem onClick={this.logOut.bind(this)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav direction=\"down\">\n              <DropdownToggle nav>\n                <NavItem className=\"d-md-down-none\">\n                  <NavLink to=\"#\" className=\"nav-link fa fa-home\"> {this.state.username}</NavLink>\n                </NavItem>\n              </DropdownToggle>\n            </UncontrolledDropdown>\n  \n          </Nav>\n          {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n          {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n          <div className='right-coner'></div>\n          <ChangePassword\n            show = {this.state.passwordModalShow}\n            onHide = {passwordModalClose}/>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\n\nexport default withRouter(DefaultHeader);\n"],"names":["Url","BASE_URL","Server_connection","ADMIN_SIGN_UP_URL","ADMIN_LOGIN_URL","ADD_NEW_CLIENT_URL","CLIENT_ADMIN_SIGN_UP_URL","CLIENT_ADMIN_LOGIN_URL","GET_ALL_CLIENTS_URL","GET_ALL_APP_CLIENTS_URL","DELETE_CLIENT_INFO_URL","GET_CLIENT_REPORTS_URL","ADD_CLIENT_USER_URL","UPDATE_CLIENT_INFO_URL","UPDATE_CLIENT_USER_INFO_URL","DELETE_CLIENT_USER_INFO_URL","GET_ALL_CLIENT_USERS_URL","ASSIGN_REPORTS_TO_USERS_URL","GET_ALL_ASIGNED_REPORTS_URL","DELETE_ASSIGNMENT_INFO_URL","ACCESS_TOKEN_URL","GET_ALL_INTEL_ADMINS_URL","CHANGE_PASSWORD","FORGOT_PASSWORD_URL","RESET_PASSWORD_URL","token","localStorage","IntellUserToken","decoded","jwt_decode","Client_id","client_id","Email","email","Id","id","Name","username","Status","user_status","Type","user_type","UserInfo","UserEmail","UserId","UserName","UserType","UserStatus","ClientId","ChangePassword","props","state","old_password","new_password","message","isLoaded","handleUpdateItem","bind","onChange","this","setState","e","target","name","value","preventDefault","change_password","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","error","regions","Modal","size","centered","closeButton","FormGroup","row","className","Col","xs","Label","htmlFor","Input","type","placeholder","Button","block","color","onClick","onHide","Component","DefaultHeader","passwordModalShow","history","push","removeItem","passwordModalClose","children","display","mobile","full","src","logo","width","height","alt","Nav","navbar","NavItem","NavLink","to","Link","UncontrolledDropdown","nav","direction","DropdownToggle","DropdownMenu","right","DropdownItem","logOut","show","defaultProps","withRouter"],"sourceRoot":""}